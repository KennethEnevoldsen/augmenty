
[project]
name = "augmenty"
version = "1.4.0"
description = "An augmentation library based on SpaCy for joint augmentation of text and labels."
authors = [{name = "Kenneth Enevoldsen", email = "kennethcenevoldsen@gmail.com"}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]
keywords = [
    "nlp",
    "NLP",
    "spaCy",
    "text analysis",
    "natural language processing",
    "text mining",
    "augmentation",
    "data augmentation",
    "data science",
    "machine learning",
    "deep learning"
]
requires-python = ">=3.8"
dependencies = [
    "spacy>=3.2.0",
    "catalogue>=2.0.4",
    "thinc>=8.0.8",
    "pydantic>=1.8.2",
    "numpy>=1.15.0"
]

[project.readme]
file = "readme.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/KennethEnevoldsen/augmenty"
Documentation = "https://kennethenevoldsen.github.io/augmenty/"
Repository = "https://github.com/KennethEnevoldsen/augmenty"

[project.license]
file = "LICENSE"
name = "MIT"


[project.optional-dependencies]
da = ["dacy>=2.3.1"]
all = ["nltk>=3.6.7"]
style = [
    "black==22.12.0",
    "pre-commit>=2.20.0",
    "ruff==0.0.191",
    "mypy==0.991"
]
tests = [
    "pytest>=7.1.3",
    "pytest-cov>=3.0.0",
    "pytest-lazy-fixture>=0.6.3",
    "pytest-timeout>=2.1.0"
]
docs = [
    "sphinx>=5.3.0",
    "furo>=2022.12.7",
    "sphinx-copybutton>=0.5.1",
    "sphinxext-opengraph>=0.7.3",
    "sphinx_design>=0.3.0",
    "myst-nb>=0.6.0",
]
tutorials = [
    "jupyter>=1.0.0",
    "faker==13.13.0"
]


[build-system]
requires = ["setuptools>=61.0.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
augmenty = ["meta.json"]

[tool.coverage.run]
omit = [
    "**/tests/*",
    "**/_vendorized/*",
    "**/about.py",
]

exclude_lines = [
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __unicode__",
    "def __repr__",
    "if self.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = true

[tool.semantic_release]
branch = "main"
version_variable = [
    "pyproject.toml:version"
]
build_command = "python -m pip install build; python -m build"

[tool.ruff]
exclude = [
    ".venv",
    ".env",
    ".git",
    "__pycache__",
]
ignore = [
  "ANN101",
  "ANN401",
  "E402",
  "E501",
  "F401",
  "F841",
  "RET504",
  "ANN202",
]
ignore-init-module-imports = true
# Allow autofix for all enabled rules (when `--fix`) is provided.
unfixable = ["ERA"]